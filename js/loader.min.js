class ProgressRing extends HTMLElement{constructor(){super();const stroke=this.getAttribute("stroke"),radius=this.getAttribute("radius"),normalizedRadius=radius-2*stroke;this._circumference=2*normalizedRadius*Math.PI,this._root=this.attachShadow({mode:"open"}),this._root.innerHTML=`\n    <svg\n      height="${2*radius}"\n      width="${2*radius}"\n     >\n       <circle\n         stroke="white"\n         stroke-dasharray="${this._circumference} ${this._circumference}"\n         style="stroke-dashoffset:${this._circumference}"\n         stroke-width="${stroke}"\n         fill="transparent"\n         r="${normalizedRadius}"\n         cx="${radius}"\n         cy="${radius}"\n      />\n    </svg>\n\n    <style>\n      circle {\n        transition: stroke-dashoffset 0.35s;\n        transform: rotate(-90deg);\n        transform-origin: 50% 50%;\n        \n      }\n    </style>\n  `}setProgress(percent){const offset=this._circumference-percent/100*this._circumference,circle=this._root.querySelector("circle");circle.style.strokeDashoffset=offset}static get observedAttributes(){return["progress"]}attributeChangedCallback(name,oldValue,newValue){"progress"===name&&this.setProgress(newValue)}}window.customElements.define("progress-ring",ProgressRing);let progress=0;const el=document.querySelector("progress-ring");if(!sessionStorage.getItem("load")){$(".loader").css("display","flex");const interval=setInterval(()=>{progress+=10,el.setAttribute("progress",progress),100===progress&&(sessionStorage.setItem("load",!0),clearInterval(interval),hideDiv())},360)}function hideDiv(){$(".loader").css("display","none")}